name: "Tests"

on: [push, pull_request]

jobs:
  initialize-mysql:
    name: "Init MySQL"
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
    steps:
      - name: Init Database
        run: |
          mysql -uroot -h127.0.0.1 -proot -e 'CREATE DATABASE IF NOT EXISTS `phalcon-migrations`;'

  initialize-postgres:
    name: "Init PostgreSQL"
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
    steps:
      - name: Init Database
        run: psql -h 127.0.0.1

  run-with-mysql:
    name: MySQL and PHP ${{ matrix.php-versions }}
    needs: [initialize-mysql, initialize-postgres]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.2', '7.3', '7.4']
    steps:
      - uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl, json, phalcon4
          pecl: true

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-suggest

      - name: Run test suite
        if: always()
        run: |
          vendor/bin/phpunit tests/Integration/MySQL --coverage-clover=coverage-integration-mysql.xml
          vendor/bin/phpunit tests/Unit --coverage-clover=coverage-unit-mysql.xml

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.xml

  run-with-postgres:
    name: PostgreSQL and PHP ${{ matrix.php-versions }}
    needs: [initialize-mysql, initialize-postgres]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.2', '7.3', '7.4']
    steps:
      - uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl, json, phalcon4
          pecl: true

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-suggest

      - name: Run test suite
        if: always()
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.xml
